services:
  redis:
    image: redis:7.2-alpine
    container_name: qr-redis
    ports: ["6379:6379"]
    volumes:
      - ./data/redis:/data
      - ./configs/redis/redis.conf:/usr/local/etc/redis/redis.conf
    networks: [qr-network]
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    command: redis-server /usr/local/etc/redis/redis.conf --requirepass ${REDIS_PASSWORD}

  mysql:
    image: mysql:8.0.33
    container_name: qr-mysql
    ports: ["3306:3306"]
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_INITDB_SKIP_TZINFO: 0  # 允许加载时区
      TZ: Asia/Shanghai
      NACOS_DB_PASSWORD: "${NACOS_DB_PASSWORD}"
      SEATA_DB_PASSWORD: "${SEATA_DB_PASSWORD}"
    volumes:
      - /usr/share/zoneinfo:/usr/share/zoneinfo:ro
      - ./data/mysql:/var/lib/mysql
      - ./configs/mysql:/etc/mysql/conf.d
      - ./configs/mysql/0-init.sql:/docker-entrypoint-initdb.d/0-init.sql
      - ./configs/mysql/1-nacos-schema.sql:/docker-entrypoint-initdb.d/1-nacos-schema.sql
      - ./configs/mysql/2-seata-schema.sql:/docker-entrypoint-initdb.d/2-seata-schema.sql
    networks: [qr-network]
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-uroot", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 15

  nacos:
    image: nacos/nacos-server:v2.5.1
    container_name: qr-nacos
    ports: ["8848:8848", "9848:9848"]
    environment:
      MODE: standalone
      SPRING_DATASOURCE_PLATFORM: mysql
      MYSQL_SERVICE_HOST: qr-mysql
      MYSQL_SERVICE_USER: nacos
      MYSQL_SERVICE_PASSWORD: ${NACOS_DB_PASSWORD}
      MYSQL_SERVICE_DB_NAME: nacos_config
      JVM_FLAGS: -Dnacos.security.ignore.urls=/**
    depends_on:
      mysql:
        condition: service_healthy
    networks: [qr-network]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8848/nacos"]
      interval: 10s
      timeout: 5s
      retries: 15

  sentinel:
    image: bladex/sentinel-dashboard:1.8.6
    container_name: sentinel
    ports:
      - "8080:8858"
    environment:
      - AUTH_USERNAME=sentinel
      - AUTH_PASSWORD=${SENTINEL_AUTH_PASSWORD}
    networks: [qr-network]

  seata:
    image: seataio/seata-server:2.0.0
    container_name: qr-seata
    ports: ["8091:8091"]
    environment:
      SEATA_IP: ${SEATA_IP}
      SEATA_CONFIG_TYPE: nacos
      SEATA_CONFIG_NACOS_SERVER_ADDR: qr-nacos:8848
    depends_on:
      nacos:
        condition: service_healthy
    networks: [qr-network]

  init-config:
    build:
      context: .
      dockerfile: Dockerfile.init-config  # 指定 Dockerfile 路径
    image: init-seata-to-nacos-config:latest  # 自定义镜像名称
    container_name: init-seata-config
    networks: [qr-network]
    depends_on:
      nacos:
        condition: service_healthy
    environment:
      NACOS_AUTH_PASSWORD: ${NACOS_AUTH_PASSWORD}
      SEATA_DB_PASSWORD: ${SEATA_DB_PASSWORD}
    volumes:
      - ./scripts:/scripts  # 挂载宿主机脚本目录到容器
    command: [ "bash", "/scripts/init-seata-config.sh" ]

networks:
  qr-network:
    name: qr-network
    driver: bridge