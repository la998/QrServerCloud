services:
  seata:
    image: seataio/seata-server:2.0.0
    container_name: seata
    ports: [ "8091:8091","7091:7091" ]
    environment:
      STORE_MODE: db
      STORE_DB_DBTYPE: mysql
      STORE_DB_DATASOURCE: druid
      STORE_DB_DRIVERCLASSNAME: "com.mysql.cj.jdbc.Driver"
      STORE_DB_URL: "jdbc:mysql://mysql:3306/seata?useUnicode=true&characterEncoding=utf8&connectTimeout=1000&socketTimeout=3000&autoReconnect=true&useSSL=false&&serverTimezone=Asia/Shanghai"
      STORE_DB_USER: "seata"
      STORE_DB_PASSWORD: "seata123456"
      SEATA_CONFIG_NACOS_GROUP: SEATA_GROUP
      SEATA_PORT: 8091
      SEATA_CONFIG_TYPE: nacos
      SEATA_CONFIG_NACOS_SERVER_ADDR: nacos:8848
      SEATA_CONFIG_NACOS_USERNAME: nacos
      SEATA_CONFIG_NACOS_PASSWORD: nacos123456
      NACOS_AUTH_IDENTITY_KEY: ${NACOS_AUTH_IDENTITY_KEY}
      NACOS_AUTH_IDENTITY_VALUE: ${NACOS_AUTH_IDENTITY_VALUE}
      NACOS_AUTH_PASSWORD: ${NACOS_AUTH_PASSWORD}
    volumes:
      - ../configs/seata/mysql-connector-j-8.4.0.jar:/seata-server/libs/mysql-connector-j-8.4.0.jar  # 挂载驱动
      - "/usr/share/zoneinfo/Asia/Shanghai:/etc/localtime"        #设置系统时区
      - "/usr/share/zoneinfo/Asia/Shanghai:/etc/timezone"  #设置时区
    depends_on:
      init-config:
        condition: service_healthy
    networks: [qr_network]

  init-config:
    build:
      context: .
      dockerfile: Dockerfile.init-config  # 指定 Dockerfile 路径
    image: init-seata-to-nacos-config:latest  # 自定义镜像名称
    container_name: init-seata-config
    user: "${UID}:${GID}"  # 动态绑定用户
    environment:
      UID: 1000
      GID: 1000
      NACOS_AUTH_IDENTITY_KEY: ${NACOS_AUTH_IDENTITY_KEY}
      NACOS_AUTH_IDENTITY_VALUE: ${NACOS_AUTH_IDENTITY_VALUE}
      NACOS_AUTH_PASSWORD: ${NACOS_AUTH_PASSWORD}
    volumes:
      - ./init-seata-config.sh:/scripts/init-seata-config.sh  # 挂载宿主机脚本目录到容器
    command: [ "bash", "-c", "/scripts/init-seata-config.sh && touch /scripts/init-complete.flag && tail -f /dev/null" ]
    healthcheck:
      test: [ "CMD", "test", "-f", "/scripts/init-complete.flag" ]
      interval: 5s
      timeout: 3s
      retries: 10

    networks: [qr_network]

networks:
  qr_network:
    external: true  # 声明使用外部网络