version: "3.8"
services:
  seata:
    image: seataio/seata-server:2.0.0
    container_name: seata
    ports: [ "8091:8091","7091:7091" ]
    environment:
      STORE_MODE: db
      STORE_DB_DBTYPE: mysql
      SEATA_PORT: 8091
      SEATA_IP: ${SEATA_IP}
      SEATA_CONFIG_TYPE: nacos
      SEATA_CONFIG_NACOS_SERVER_ADDR: nacos:8848
      SEATA_CONFIG_NACOS_USERNAME: nacos
      SEATA_CONFIG_NACOS_PASSWORD: nacos
    volumes:
      - "/usr/share/zoneinfo/Asia/Shanghai:/etc/localtime"        #设置系统时区
      - "/usr/share/zoneinfo/Asia/Shanghai:/etc/timezone"  #设置时区
      # 假设我们通过docker cp命令把资源文件拷贝到相对路径`./seata-server/resources`中
      # 如有问题，请阅读上面的[注意事项]以及[使用自定义配置文件]
      - "../configs/seata/resources:/seata-server/resources"
    networks: [ qr_network ]
  init-config:
    build:
      context: ..
      dockerfile: Dockerfile.init-config  # 指定 Dockerfile 路径
    image: init-seata-to-nacos-config:latest  # 自定义镜像名称
    container_name: init-seata-config
    networks: [ qr_network ]

    environment:
      NACOS_AUTH_IDENTITY_KEY: ${NACOS_AUTH_IDENTITY_KEY}
      NACOS_AUTH_IDENTITY_VALUE: ${NACOS_AUTH_IDENTITY_VALUE}
      NACOS_AUTH_PASSWORD: ${NACOS_AUTH_PASSWORD}
    volumes:
      - ./init-seata-config.sh:/scripts  # 挂载宿主机脚本目录到容器
    command: [ "bash", "-c", "/scripts/init-seata-config.sh && touch /scripts/init-complete.flag && tail -f /dev/null" ]
    healthcheck:
      test: [ "CMD", "test", "-f", "/scripts/init-complete.flag" ]
      interval: 5s
      timeout: 3s
      retries: 10
networks:
  qr_network:
    external: true  # 声明使用外部网络